{
    "sourceFile": "src/components/ExportEvents.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753050512441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753050512441,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Button, Menu, MenuItem, Dialog, DialogTitle, DialogActions, TextField } from '@mui/material';\r\nimport { saveAs } from 'file-saver';\r\nimport { Parser } from 'json2csv';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function ExportEvents({ events }) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [customDialogOpen, setCustomDialogOpen] = useState(false);\r\n  const [customRange, setCustomRange] = useState({ from: '', to: '' });\r\n\r\n  const openMenu = (e) => setAnchorEl(e.currentTarget);\r\n  const closeMenu = () => setAnchorEl(null);\r\n\r\n  const exportCSV = (filteredEvents, filename) => {\r\n    const parser = new Parser();\r\n    const csv = parser.parse(filteredEvents);\r\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    saveAs(blob, filename);\r\n  };\r\n\r\n  const handleExport = (range) => {\r\n    closeMenu();\r\n\r\n    let from, to;\r\n    const now = dayjs();\r\n    if (range === 'today') {\r\n      from = now.startOf('day');\r\n      to = now.endOf('day');\r\n    } else if (range === 'week') {\r\n      from = now.startOf('week');\r\n      to = now.endOf('week');\r\n    } else if (range === 'month') {\r\n      from = now.startOf('month');\r\n      to = now.endOf('month');\r\n    } else {\r\n      setCustomDialogOpen(true);\r\n      return;\r\n    }\r\n\r\n    const filtered = events.filter(e =>\r\n      dayjs(e.start).isAfter(from) && dayjs(e.start).isBefore(to)\r\n    );\r\n\r\n    exportCSV(filtered, `events_${range}_${now.format('YYYY-MM-DD')}.csv`);\r\n  };\r\n\r\n  const handleCustomExport = () => {\r\n    const from = dayjs(customRange.from);\r\n    const to = dayjs(customRange.to);\r\n\r\n    const filtered = events.filter(e =>\r\n      dayjs(e.start).isAfter(from) && dayjs(e.start).isBefore(to)\r\n    );\r\n\r\n    exportCSV(filtered, `events_custom_${dayjs().format('YYYY-MM-DD')}.csv`);\r\n    setCustomDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" onClick={openMenu}>Export Events</Button>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={closeMenu}>\r\n        <MenuItem onClick={() => handleExport('today')}>Today</MenuItem>\r\n        <MenuItem onClick={() => handleExport('week')}>This Week</MenuItem>\r\n        <MenuItem onClick={() => handleExport('month')}>This Month</MenuItem>\r\n        <MenuItem onClick={() => handleExport('custom')}>Custom Range</MenuItem>\r\n      </Menu>\r\n\r\n      <Dialog open={customDialogOpen} onClose={() => setCustomDialogOpen(false)}>\r\n        <DialogTitle>Custom Date Range</DialogTitle>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"From\"\r\n          fullWidth\r\n          value={customRange.from}\r\n          onChange={(e) => setCustomRange({ ...customRange, from: e.target.value })}\r\n          sx={{ m: 2 }}\r\n        />\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"To\"\r\n          fullWidth\r\n          value={customRange.to}\r\n          onChange={(e) => setCustomRange({ ...customRange, to: e.target.value })}\r\n          sx={{ m: 2 }}\r\n        />\r\n        <DialogActions>\r\n          <Button onClick={() => setCustomDialogOpen(false)}>Cancel</Button>\r\n          <Button onClick={handleCustomExport} disabled={!customRange.from || !customRange.to}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n"
        }
    ]
}